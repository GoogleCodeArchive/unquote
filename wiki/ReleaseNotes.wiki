#summary List of enhancements and bug fixes for each release.
#labels Featured

= Release Notes =

== v1.3.0, 4/2/11 ==

Significant release: many bug fixes and feature enhancements especially in the area of re-sugaring complex expressions.

  * Issue 9: Decompiler Bug or F# Quotation Bug: generic empty list treated as call
  * Issue 15: Reduction Bug: error reducing sprintf Application; lhs match of Application needs to be loosened
  * Issue 21: Decompiler Feature Request: sprint Lambda Unit vars literally
  * Issue 22: Decompiler Bug: backwards pipe precedence incorrect
  * Issue 23: Decompiler Feature Request: re-sugar partially applied lambda expressions
  * Issue 24: Reduction Feature Request: do not reduce expressions which return Lambda Values
  * Issue 25: Decompiler Feature Request: re-sugar unapplied lambda expressions
  * Issue 26: Decompiler Feature Request: support PropertySet expressions
  * Issue 27: Decompiler Feature Request: re-sugar Lambdas with tupled args
  * Issue 28: Decompiler Bug or F# Quotation Bug: exception with certain list NewUnionCases
  * Issue 29: Decompiler Enhancement: re-sugar tuple let expressions
  * Issue 30: Decompiler Feature Request: re-sugar list and array range expressions
  * Issue 31: Decompiler Bug: static PropetyGet expressions with args not sprinting args

== v1.2.3, 3/13/11 ==

Incremental release: bug fixes and feature enhancements.

  * Issue 14: Decompiler Bug, UnionCaseTest: zero arg unions sprinted with "()"
  * Issue 17: Decompiler Bug: can't differentiate between generic values and generic unit function
  * Issue 18: Decompiler Bug: generic object constructions are sprinted with reflected name instead of generic args
  * Issue 19: Decompiler Bug: TupleGet expressions involving tuples of length > 7 not handled correctly
  * Issue 20: Decompiler Feature Request: name TupleGet pattern match value using "itemX" instead of "indexX"

== v1.2.2, 2/23/11 ==

Several bug fixes and feature enhancements.

  * Issue 2: Decompiler Feature Request: support TupleGet expressions
  * Issue 3: Decompiler Feature Request: support UnionCaseTest expressions
  * Issue 4: Reduction Feature Request: support NewUnionCase subexpressions
  * Issue 6: Type.FSharpName bug: can't handle generic type definiations
  * Issue 8: Decompiler Bug: empty list error
  * Issue 10: Type.FSharpName bug: can't handle types in modules
  * Issue 12: xunit.gui.exe Output: bad newlines

== v1.2.1, 2/15/11 ==

Fix bug: local lambdas represented as Value fail during Application reduction rebuild.

== v1.2.0, 2/13/11 ==

Added `raises<'a when 'a :> exn> : Quotations.Expr -> unit` for testing expected exceptions.

== v1.1.0, 2/11/11 == 

Better support for exceptions within tests, expand support for more expressions

  * Better support for exceptions within tests: print printable lines up until the exception, then print the exception (before only printed the exception)
  * Support applications of lambda values (e.g. local function vs. module property)
  * Better preservation of type information for reduction evaluations which return null
  * Print "()" for function calls which 1) do not need explit type arguments 2) take only single unit arg
  * Changed FSI-mode Operator.test output to be more like unit test mode output; no longer uses tabs

== v1.0.0, 2/08/11 == 

Initial release